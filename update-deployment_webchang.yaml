apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: update-deployment
spec:
  description: Task to update deployment with newly built image in gitops repository.
  params:
    - name: gitops-repo-url
      type: string
      description: URL of gitops repository to update with the newly built image.
    - name: image
      type: string
      description: Reference of the newly built image to use.
    - name: gitops-auth-secret-name
      type: string
      default: gitops-auth-secret
      description: |
        Secret of basic-auth type containing credentials to commit into gitops repository.
    - name: git-url
      type: string
      default: "undefined"
      description: |
        This is a PipelineRun parameter recording source repo URL.
    - name: revision
      type: string
      default: "undefined"
      description: |
        This is a PipelineRun parameter recording source repo revision.
  workspaces:
    - name: gitops-auth
      optional: true
  steps:
    - name: patch-gitops
      image: quay.io/konflux-ci/appstudio-utils:48c311af02858e2422d6229600e9959e496ddef1@sha256:91ddd999271f65d8ec8487b10f3dd378f81aa894e11b9af4d10639fd52bba7e8
      env:
        - name: PARAM_GITOPS_REPO_URL
          value: $(params.gitops-repo-url)
        - name: PARAM_IMAGE
          value: $(params.image)
        - name: WORKSPACE_GITOPS_AUTH_DIRECTORY_BOUND
          value: $(workspaces.gitops-auth.bound)
        - name: WORKSPACE_GITOPS_AUTH_DIRECTORY_PATH
          value: $(workspaces.gitops-auth.path)
        - name: PARAM_URL
          value: $(params.git-url)
        - name: PARAM_REV
          value: $(params.revision)
      script: |

        if [ "${WORKSPACE_GITOPS_AUTH_DIRECTORY_BOUND}" = "true" ] ; then
          if [ -f "${WORKSPACE_GITOPS_AUTH_DIRECTORY_PATH}/.git-credentials" ] && [ -f "${WORKSPACE_GITOPS_AUTH_DIRECTORY_PATH}/.gitconfig" ]; then
            cp "${WORKSPACE_GITOPS_AUTH_DIRECTORY_PATH}/.git-credentials" "${HOME}/.git-credentials"
            cp "${WORKSPACE_GITOPS_AUTH_DIRECTORY_PATH}/.gitconfig" "${HOME}/.gitconfig"
          # Compatibility with kubernetes.io/basic-auth secrets
          elif [ -f "${WORKSPACE_GITOPS_AUTH_DIRECTORY_PATH}/username" ] && [ -f "${WORKSPACE_GITOPS_AUTH_DIRECTORY_PATH}/password" ]; then
            HOSTNAME=$(echo "${PARAM_GITOPS_REPO_URL}" | awk -F/ '{print $3}')
            echo "https://$(cat "${WORKSPACE_GITOPS_AUTH_DIRECTORY_PATH}/username"):$(cat "${WORKSPACE_GITOPS_AUTH_DIRECTORY_PATH}/password")@$HOSTNAME" > "${HOME}/.git-credentials"
            printf "[credential \"https://%s\"]\n helper = store" "${HOSTNAME}" > "${HOME}/.gitconfig"
          else
            echo "Unknown basic-auth workspace format"
            exit 1
          fi
          chmod 400 "${HOME}/.git-credentials"
          chmod 400 "${HOME}/.gitconfig"
        else
          echo "git credentials to push into gitops repository ${PARAM_GITOPS_REPO_URL} is not configured."
          echo "gitops repository is not updated automatically."
          echo "You can update gitops repository with the new image: ${PARAM_IMAGE} manually"
          echo "TODO: configure git credentials to update gitops repository."
          exit 0
        fi

        git config --global user.email "rhtap@noreplay.com"
        git config --global user.name "gitops-update"

        git clone ${PARAM_GITOPS_REPO_URL}
        gitops_repo_url=${PARAM_GITOPS_REPO_URL%'.git'}
        gitops_repo_name=$(basename ${gitops_repo_url})
        cd ${gitops_repo_name}

        component_name=$(yq .metadata.name application.yaml)
        deployment_patch_filepath="components/${component_name}/overlays/development/deployment-patch.yaml"
        IMAGE_PATH='.spec.template.spec.containers[0].image'
        old_image=$(yq "${IMAGE_PATH}" "${deployment_patch_filepath}")
        yq e -i "${IMAGE_PATH} |= \"${PARAM_IMAGE}\"" "${deployment_patch_filepath}"

        echo "*** Add source code URL and revision to .metadata.annotations"
        export SRC_REPO_URL="$PARAM_URL"
        export SRC_REPO_REV="$PARAM_REV"
        echo "*** Source repo URL: $SRC_REPO_URL"
        echo "*** Source repo revision: $SRC_REPO_REV"

        yq -i '
          .metadata.annotations += {"git_url": strenv(SRC_REPO_URL)} |
          .metadata.annotations += {"git_rev": strenv(SRC_REPO_REV)}
        ' "${deployment_patch_filepath}"

        git add .
        git commit -m "Update '${component_name}' component image to: ${PARAM_IMAGE}"
        git push 2> /dev/null || \
        {
          echo "Failed to push update to gitops repository: ${PARAM_GITOPS_REPO_URL}"
          echo 'Do you have correct git credentials configured?'
          exit 1
        }
        echo "Successfully updated development image from ${old_image} to ${PARAM_IMAGE}"

        echo "***[rong] contents of /workspace/gitops-auth"
        ls -la /workspace/gitops-auth
        echo "------"

        echo "***[rong] list all env variables"
        env
        echo "------"

        echo "***[rong] contents of /"
        ls -la /
        echo "------"
 
        echo "***[rong] contents of $PWD"
        ls -la $PWD
        echo "------"
